"use client"

import { Card, CardContent } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { useState } from "react"
import { ExploitDetailModal } from "@/components/exploit-detail-modal"
import type { Exploit } from "@/types/exploit"

interface ExploitTimelineProps {
  exploits: Exploit[]
}

export function ExploitTimeline({ exploits }: ExploitTimelineProps) {
  const [selectedExploit, setSelectedExploit] = useState<Exploit | null>(null)

  const handleViewDetails = (exploit: Exploit) => {
    setSelectedExploit(exploit)
  }

  const handleCloseModal = () => {
    setSelectedExploit(null)
  }

  // Sort exploits by date (newest first)
  const sortedExploits = [...exploits].sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())

  // Group exploits by month and year
  const groupedExploits: Record<string, Exploit[]> = {}

  sortedExploits.forEach((exploit) => {
    const date = new Date(exploit.date)
    const monthYear = date.toLocaleDateString("en-US", { month: "long", year: "numeric" })

    if (!groupedExploits[monthYear]) {
      groupedExploits[monthYear] = []
    }

    groupedExploits[monthYear].push(exploit)
  })

  return (
    <>
      <div className="space-y-8">
        {Object.entries(groupedExploits).length === 0 ? (
          <div className="text-center py-12 text-muted-foreground">No exploits found.</div>
        ) : (
          Object.entries(groupedExploits).map(([monthYear, monthExploits]) => (
            <div key={monthYear}>
              <h3 className="text-lg font-semibold mb-4">{monthYear}</h3>
              <div className="relative border-l-2 border-muted pl-6 space-y-6">
                {monthExploits.map((exploit) => (
                  <div key={exploit.id} className="relative">
                    <div className="absolute -left-[29px] top-0 h-5 w-5 rounded-full bg-background border-2 border-primary"></div>
                    <Card>
                      <CardContent className="p-4">
                        <div className="flex flex-col sm:flex-row sm:items-center justify-between gap-2 mb-2">
                          <div className="flex items-center gap-2">
                            <span className="font-medium">{exploit.protocol}</span>
                            <Badge variant={exploit.status === "Confirmed" ? "destructive" : "outline"}>
                              {exploit.status}
                            </Badge>
                          </div>
                          <span className="text-sm text-muted-foreground">
                            {new Date(exploit.date).toLocaleDateString()}
                          </span>
                        </div>
                        <div className="flex flex-col sm:flex-row sm:items-center justify-between gap-2">
                          <div>
                            <p className="text-sm">Type: {exploit.type}</p>
                            <p className="text-sm font-medium">Funds Lost: {exploit.fundsLost}</p>
                          </div>
                          <Button variant="outline" size="sm" onClick={() => handleViewDetails(exploit)}>
                            View Details
                          </Button>
                        </div>
                      </CardContent>
                    </Card>
                  </div>
                ))}
              </div>
            </div>
          ))
        )}
      </div>

      {selectedExploit && (
        <ExploitDetailModal exploit={selectedExploit} isOpen={!!selectedExploit} onClose={handleCloseModal} />
      )}
    </>
  )
}
